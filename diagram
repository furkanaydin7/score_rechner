graph LR
    subgraph "Phase 1: Datenaufbereitung (einmalig)"
        %% Inputs
        A["<font size=4>📍</font><br><b>ÖV-Güteklassen</b><br>(ARE.gpkg)"]
        B["<font size=4>🗺️</font><br><b>Gemeindegrenzen</b><br>(swisstopo.gpkg)"]

        %% Processing Steps
        C["<b>1. Einlesen & CRS-Harmonisierung</b>"]
        D["<b>2. Numerische Punktvergabe</b>"]
        E["<b>3. Geometrischer Overlay</b>"]
        F["<b>4. Flächengewichteter Mittelwert</b>"]

        %% Output of Phase 1
        G["<font size=4>📊</font><br><b>oev_qualitaet_gemeinden.csv</b><br>(Finale Tabelle mit 'mean_score' pro Gemeinde)"]

        %% Flow
        A & B --> C
        C --> D
        D --> E
        E --> F
        F -- "Export" --> G
    end

    subgraph "Phase 2: Anwendung im Prototyp (pro Abfrage)"
        %% Inputs for prototype
        H["📄<br><b>config.json</b><br>(enthält z.B. den Gemeindenamen)"]
        I["🐍<br><b>main_script.py</b><br>(liest Konfiguration)"]
        J["⚙️<br><b>standort_score_rechner.py</b><br>(Methode: <i>get_oev_gueteklasse</i>)"]
        
        %% Final Result
        K["<font size=4>⭐</font><br><b>Finaler Output</b><br>mean_score & Güteklasse für den Standort"]

        %% Flow of Phase 2
        H -- "liest" --> I
        I -- "steuert & übergibt Gemeindenamen" --> J
        G -- "wird eingelesen von" --> J
        J -- "gibt Ergebnis zurück" --> K
    end

    %% Styles
    style A fill:#D6EAF8,stroke:#3498DB
    style B fill:#D6EAF8,stroke:#3498DB
    style G fill:#D5F5E3,stroke:#2ECC71
    style H fill:#fdfd96,stroke:#333
    style K fill:#C39BD3,stroke:#333,stroke-width:2px
